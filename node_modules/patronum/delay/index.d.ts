import { Unit, Event, Store, Effect } from 'effector';
declare type EventAsReturnType<Payload> = any extends Payload ? Event<Payload> : never;
export declare function delay<T>({ source, timeout, target, }: {
    source: Unit<T>;
    timeout: ((_payload: T) => number) | Store<number> | number;
    target?: Store<T> | Event<T> | Effect<T, any, any>;
}): EventAsReturnType<T>;
export {};
